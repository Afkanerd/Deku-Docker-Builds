version: "3.9"

services:
  back-end-rest:
    restart: always
    network_mode: "host"

    ports:
      - "${BACK_END_REST_PORT:?err}:${BACK_END_REST_PORT}"
      - "${BACK_END_REST_PORT_SSL:?err}:${BACK_END_REST_PORT_SSL}"

    build:
      context: ./${PATH_BACK_END_REST}
      dockerfile: Dockerfile
      target: production

    volumes:
      - "${SSL_FILE_PATH:?err}:${SSL_FILE_PATH}"

    environment:
      - HOST=${HOST:?err}
      - PORT=${BACK_END_REST_PORT:?err}

      - ENCRYPTION_KEY=${ENCRYPTION_KEY:?err}
      - HASH_SALT=${HASH_SALT:?err}

      - SSL_SERVER_NAME=${HOST:?err}
      - SSL_PORT=${BACK_END_REST_PORT_SSL:?err}
      - SSL_CERTIFICATE=${SSL_CERTIFICATE:?err}
      - SSL_KEY=${SSL_KEY:?err}
      - SSL_PEM=${SSL_PEM:?err}

      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - ENABLE_RECAPTCHA=${ENABLE_RECAPTCHA:?err}
      - ORIGINS=${ORIGINS}

      - RABBITMQ_SSL_ACTIVE=${RMQ_SSL}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

    env_file:
      - .env

  front-end-react:
    restart: always

    depends_on:
      - back-end-rest

    ports:
      - "${FRONT_END_REACT_PORT:?err}:80"
      - "${FRONT_END_REACT_PORT_SSL:?err}:443"

    volumes:
      - type: bind
        source: ${SSL_CERTIFICATE}
        target: /usr/local/apache2/conf/server.crt
      - type: bind
        source: ${SSL_KEY}
        target: /usr/local/apache2/conf/server.key
      - type: bind
        source: ${SSL_PEM}
        target: /usr/local/apache2/conf/server.pem

    build:
      context: ./${PATH_FRONT_END_REACT}
      dockerfile: Dockerfile
      target: production
      args:
        - CLOUD_BE_REST_URL="https://${HOST}:${BACK_END_REST_PORT_SSL}/${BACK_END_REST_VERSION}"
        - SSL_CRT_FILE=${SSL_CERTIFICATE:?err}
        - SSL_KEY_FILE=${SSL_KEY:?err}
        - SSL_ENABLE=true

    env_file:
      - .env

  cron-backup:
    image: fradelg/mysql-cron-backup
    restart: unless-stopped
    network_mode: "host"

    volumes:
      - ${DB_BACKUP_PATH:-./backup}:/backup

    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MAX_BACKUPS=15
      - INIT_BACKUP=1
      - CRON_TIME=${BACKUP_CRON_SCHEDULE:?err}
      - GZIP_LEVEL=9
      # As of MySQL 8.0.21 this is needed
      - MYSQLDUMP_OPTS=--no-tablespaces
