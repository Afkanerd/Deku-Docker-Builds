volumes:
  db-data:
  rmq-data:


services:
  back-end-rest:
    restart: always

    ports:
      - "${BACK_END_REST_PORT:?err}:${BACK_END_REST_PORT}"
      - "${BACK_END_REST_PORT_SSL:?err}:${BACK_END_REST_PORT_SSL}"

    build:
      context: ./${PATH_BACK_END_REST}
      dockerfile: Dockerfile
      target: production

    volumes:
      - "${SSL_FILE_PATH:?err}:${SSL_FILE_PATH}"

    environment:
      - HOST=${HOST:?err}
      - PORT=${BACK_END_REST_PORT:?err}

      - ENCRYPTION_KEY=${ENCRYPTION_KEY:?err}
      - HASH_SALT=${HASH_SALT:?err}

      - SSL_SERVER_NAME=${HOST:?err}
      - SSL_PORT=${BACK_END_REST_PORT_SSL:?err}
      - SSL_CERTIFICATE=${SSL_CERTIFICATE:?err}
      - SSL_KEY=${SSL_KEY:?err}
      - SSL_PEM=${SSL_PEM:?err}

      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}

      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
      - ENABLE_RECAPTCHA=${ENABLE_RECAPTCHA:?err}
      - ORIGINS=${ORIGINS}

      - RABBITMQ_SSL_ACTIVE=${RMQ_SSL}
      - RABBITMQ_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_DEFAULT_PASS}

    env_file:
      - .env

  front-end-react:
    restart: always

    depends_on:
      - back-end-rest

    ports:
      - "${FRONT_END_REACT_PORT:?err}:80"
      - "${FRONT_END_REACT_PORT_SSL:?err}:443"

    volumes:
      - type: bind
        source: ${SSL_CERTIFICATE}
        target: /usr/local/apache2/conf/server.crt
      - type: bind
        source: ${SSL_KEY}
        target: /usr/local/apache2/conf/server.key
      - type: bind
        source: ${SSL_PEM}
        target: /usr/local/apache2/conf/server.pem

    build:
      context: ./${PATH_FRONT_END_REACT}
      dockerfile: Dockerfile
      target: production
      args:
        - CLOUD_BE_REST_URL="https://${HOST}:${BACK_END_REST_PORT_SSL}/${BACK_END_REST_VERSION}"
        - SSL_CRT_FILE=${SSL_CERTIFICATE:?err}
        - SSL_KEY_FILE=${SSL_KEY:?err}
        - SSL_ENABLE=true

    env_file:
      - .env

  rmq:
    restart: always
    hostname: rmq-server
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - "${SSL_FILE_PATH:?err}:/etc/ssl/certs/smswithoutborders/:ro"
      - rmq-data:/var/lib/rabbitmq/mnesia/
    build:
      context: ./${PATH_RMQ}
      dockerfile: Dockerfile
    ports:
      - "15671:15671"
      - "15672:15672"
      - "15692:15692"
      - "5671:5671"
      - "5672:5672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 30s
      timeout: 10s
      retries: 5
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS:-guest}

  mysql:
    restart: always
    image: mariadb:10.5
    volumes:
      - db-data:/var/lib/mysql
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:?err}
      MYSQL_HOST: 127.0.0.1
    healthcheck:
      test: "mysql -u${MYSQL_USER} -p${MYSQL_PASSWORD:?err} -e \"show databases\""
      interval: 1s
      retries: 120

  cron-backup:
    image: fradelg/mysql-cron-backup
    restart: unless-stopped

    volumes:
      - ${DB_BACKUP_PATH:-./backup}:/backup

    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MAX_BACKUPS=15
      - INIT_BACKUP=0
      - EXIT_BACKUP=1
      - CRON_TIME=${BACKUP_CRON_SCHEDULE:?err}
      - GZIP_LEVEL=9
      # As of MySQL 8.0.21 this is needed
      - MYSQLDUMP_OPTS=--no-tablespaces
